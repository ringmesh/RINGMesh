# Example of CMakeOptions.txt file

set(GEOGRAM_WITH_TETGEN TRUE)
set(GEOGRAM_WITH_MEDIT TRUE)
set(GEOGRAM_WITH_GRAPHICS TRUE)

#Uncomment to compile FPG (Meyer and Pion's Floating Point Filter Generator)
#set(GEOGRAM_WITH_FPG TRUE)

#Uncomment the following line for using FMA instructions (see comments in
#  geogram/numerics/multi√_precision.h / multi_precision.cpp)
#SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mavx2 -mfma -frounding-math -ffp-contract=off")

# These options can also be specified with configure.sh --with-xxx(=...)

# set(VORPALINE_WITH_GCOV TRUE)
# Equivalent to: configures.sh --with-gcov

# set(VORPALINE_WITH_GPROF TRUE)
# Equivalent to: configures.sh --with-gprof

# set(VORPALINE_WITH_ASAN TRUE)
# Equivalent to: configures.sh --with-asan

# set(VORPALINE_WITH_TSAN TRUE)
# Equivalent to: configures.sh --with-tsan

# set(VORPALINE_WITH_DDT "/opt/allinea-tools")
# Equivalent to: configures.sh --with-ddt=/opt/allinea-tools

###########
#  CNC
###########
# Concurrent Number Cruncher (CNC): a general purpose symmetric sparse solver
# on the GPU.
# Uncomment this line to enable CNC support. 
SET(USE_CNC TRUE)

# Uncomment the line corresponding to your device.
# For the complete list of compute capability of all CUDA-enabled products,
# see Appendix A.1 of the NVIDIA CUDA Programming Guide.
#SET(CNC_NVCC_FLAGS -arch=sm_10)
#SET(CNC_NVCC_FLAGS -arch=sm_11)
#SET(CNC_NVCC_FLAGS -arch=sm_12)
SET(CNC_NVCC_FLAGS -arch=sm_30)
#SET(CNC_NVCC_FLAGS -arch=sm_20;-Xptxas;-dlcm=cg)

# DEPRECATED Uncomment to enable automatic optimisations for your machine. If you
# don't use this, you could have to set the values yourself (cf doc/README.txt).
#SET(CNC_OPTIMIZE_FOR_THIS_MACHINE TRUE)

# If you are using a recent version of gcc, you may need to use an older one
# with nvcc (e.g. gcc 4.3 for nvcc 3.0). In this case, create symlinks named
# gcc and g++ in a folder, and add the name of this folder here.
#SET(CNC_NVCC_FLAGS ${CNC_NVCC_FLAGS};--compiler-bindir=/opt/gcc-4.3)

# Uncomment to enable thread debugging in CUDA
#SET(CUDA_DEBUG_THREADS TRUE)

# Uncomment to enable emulation of CUDA device (very slow but works on machines
# without a CUDA-enabled device)
#SET(CUDA_BUILD_EMULATION TRUE)

