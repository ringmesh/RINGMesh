#if __cplusplus > 199711L

        /**
         * \brief Move-constructor.
         * \details If c++0x11 is supported, the 'move constructor'
         *  optimizes function returns. It 'steals' the contents
         *  of \p rhs.
         * \param[in] rhs the expansion to be moved to this one
         */
        expansion_nt(expansion_nt&& rhs) : rep_(rhs.rep_) {
            rhs.rep_ = nil;
        }


        /**
         * \brief Move-constructor.
         * \details If c++0x11 is supported, the 'move assignment operator'
         *  optimizes certain manipulations. It 'steals' the contents
         *  of \p rhs.
         * \param[in] rhs the expansion to be moved to this one
         */
        expansion_nt operator=(expansion_nt&& rhs) {
            cleanup();
            rep_ = rhs.rep_;
            rhs.rep_ = nil;
        }
#endif
