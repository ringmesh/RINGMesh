/*
 *  Copyright (c) 2012-2014, Bruno Levy
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions are met:
 *
 *  * Redistributions of source code must retain the above copyright notice,
 *  this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation
 *  and/or other materials provided with the distribution.
 *  * Neither the name of the ALICE Project-Team nor the names of its
 *  contributors may be used to endorse or promote products derived from this
 *  software without specific prior written permission.
 * 
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 *  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 *  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 *  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 *  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 *  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 *  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 *  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 *  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *
 *  If you modify this software, you should include a notice giving the
 *  name of the person performing the modification, the date of modification,
 *  and the reason for such modification.
 *
 *  Contact: Bruno Levy
 *
 *     Bruno.Levy@inria.fr
 *     http://www.loria.fr/~levy
 *
 *     ALICE Project
 *     LORIA, INRIA Lorraine, 
 *     Campus Scientifique, BP 239
 *     54506 VANDOEUVRE LES NANCY CEDEX 
 *     FRANCE
 *
 */

namespace GEO {

/**

\page geogram_compiling Instructions for compiling Geogram

Geogram is tested under Linux (32 and 64 bits) and Windows (32 and 64 bits).
You will need CMake (version >= 2.8.11). There is no other dependancy (everything
that you need is shipped with Geogram). Follow the Linux or Windows instructions below.
This will generate example files in the bin/ directory. 

Linux
=====

Default options
---------------

- sh -f configure.sh
- cd build/Linux64-gcc-Release
- make

This will generate static libraries and statically linked executable. If you want
shared objects and dynamically linked executables, see below.

Fine tuning
-----------

Alternatively, you can use:
- sh -f configure.sh <platform_name>
where <platform_name> is the name of one of the subdirectories in
<geogram_path>/cmake/platforms

For instance, for generating shared objects and dynamically linked executables, use:
- sh -f configure.sh Linux64-gcc-dynamic


Windows
=======

Default options
---------------

- start CMake (cmake-gui)
- Where is the source code: <geogram_path>
- Where to build the binaries: <geogram_path>/build/windows
- Push the 'configure' button
- Choose the compiler (32 or 64 bits)
- (and ignore the warning about Doxygen)
- Push the 'generate' button
- Open <geogram_path>/build/windows/Geogram.sln in Visual studio
- Select the 'Release' or 'Debug' (default) configuration (pulldown menu)
- Build the solution (F7)

Fine tuning
-----------

- start CMake (cmake-gui)
- Where is the source code: <geogram_path>
- Where to build the binaries: <geogram_path>/build/windows
- Click the 'Add Entry' button
- Create a new variable of type 'String', with name 'VORPALINE_PLATFORM' and <platform_name>
 where <platform_name> is the name of one of the subdirectories in <geogram_path>/cmake/platforms

For instance, for generating shared objects and dynamically linked executables, use:
   'VORPALINE_PLATFORM' = 'Win-vs-dynamic-generic'

- Continue as in the previous paragraph ('Configure', 'Generate' etc...)

More tuning (for both Linux and Windows)
========================================

Some parameters can be fine-tuned by renaming <geogram_path>/CMakeOptions.txt.sample as
CMakeOptions.txt, modifying it and re-running CMake:

- GEOGRAM_WITH_TETGEN: set to TRUE to activate compilation of Hang Si's TETGEN constrained Delaunay library.
 If you do that, you should note that TETGEN is licensed under the
   [GNU Affero General Public License](http://www.gnu.org/licenses/agpl-3.0.en.html), which is different
   from the [three-clauses BSD license](http://en.wikipedia.org/wiki/BSD_licenses) used by GEOGRAM
- GEOGRAM_WITH_GRAPHICS: set to FALSE to deactivate compilation of all graphics-related libs and programs
 (geogram_gfx, vorpaview, medit)
- GEOGRAM_WITH_MEDIT: set to FALSE to deactivate compilation of Pascal Frey's medit viewer
- GEOGRAM_WITH_FPG: set to TRUE to activate compilation of Meyer and Pion's predicate filter generator (required
 if you plan to write new PCK predicates).

Generating the documentation
============================

A (hopefully reasonably) up-to-date version of the documentation
is available [here](http://alice.loria.fr/software/geogram/doc/html/).
You may want to generate the documentation from your own version, or
change some options of documentation generation.

Linux 
-----

You will need "doxygen" to generate the documentation.

- sh -f configure.sh
- cd build/Linux64-gcc-Release
- make doc-devkit-full

This generates the documentation in doc/devkit-full/html

Aternatively, one can also:

- "make doc-devkit-internal", this generates also the documentation
 of the implementation private classes declared
 in the .cpp source files as well as class collaboration graphs;

- "make doc-devkit-internal-light", the same, without class collaboration
 graphs.

To see all the possible targets, use "make help".

*/


} 